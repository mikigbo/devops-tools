import json
import sys

def process_vulnerability_report(report_file, whitelist):
    with open(report_file, "r") as f:
        report_data = json.load(f)

    vulnerabilities = []
    severity_counts = {'LOW': 0, 'MEDIUM': 0, 'HIGH': 0, 'CRITICAL': 0}

    for result in report_data.get('Results', []):
        vulnerabilities.extend(result.get('Vulnerabilities', []))

    total_vulnerabilities = len(vulnerabilities)
    whitelisted_count = 0

    for vuln in vulnerabilities:
        vuln_id = vuln.get('VulnerabilityID', '')
        severity = vuln.get('Severity', '')

        if severity in severity_counts:
            severity_counts[severity] += 1

        if whitelist.get(vuln_id) == severity:
            whitelisted_count += 1

    print('Severity Counts:')
    for level, count in severity_counts.items():
        print(f'{level}: {count}')

    # Check if there are no critical or high vulnerabilities
    if severity_counts['CRITICAL'] == 0 and severity_counts['HIGH'] == 0:
        print('No critical or high vulnerabilities found. Vulnerability check passed.')
        return True
    else:
        print('Critical or high vulnerabilities found. Vulnerability check failed.')
        return False

if __name__ == "__main__":
    if len(sys.argv) < 2:
        print('Usage: python script.py path/to/report.json')
        sys.exit(1)
    
    report_file = sys.argv[1]

    # Example whitelist of vulnerabilities to exempt
    whitelist = {
        'CVE-2021-1234': 'LOW',
        'CVE-2022-5678': 'MEDIUM',
    }

    if process_vulnerability_report(report_file, whitelist):
        sys.exit(0)  # Success exit code
    else:
        sys.exit(1)  # Failure exit code
